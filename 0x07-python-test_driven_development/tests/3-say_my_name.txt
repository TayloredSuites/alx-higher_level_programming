How to Use 3-say_my_name.py

This library is very simple, since it only has one function called
``say_my_name()``.

Numbers
=======

``say_my_name()`` returns the input of its first and last name entries.
For strings, that value is equivalent to the given statement formatted.

::

    >>> from 3-say_my_name import say_my_name
    >>> say_my_name('John', 'Smith')
    My name is John Smith

    >>> say_my_name('Bob')
    My name is Bob

Non-Strings
============

Because ``say_my_name()`` is not defined on data types other than strings,
``say_my_name()`` does not work if one of the arguments is a number,
a list, or a tuple. However, it will raise a TypeError

::

    >>> say_my_name('Aleksandrovich', 3)
    TypeError: last_name must be a string

    >>> say_my_name(666.66, 'Chmielnicki')
    TypeError: first_name must be a string
